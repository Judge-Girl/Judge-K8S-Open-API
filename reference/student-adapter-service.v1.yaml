openapi: 3.0.0
info:
  title: student-adapter-service
  version: '1.0'
servers:
  - url: 'http://localhost:33001'
paths:
  /api/students/login:
    post:
      summary: Login
      operationId: post-api-students
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
              examples:
                example:
                  value:
                    token: eyJhbGciOiJIUzI1NiJ9.eyJzdHVkZW50SWQiOiJyMTIzNDU2NzgiLCJleHAiOjE1ODU4MDcxNTN9.2_L7au4B40vdcB8P5UNjZ-q8pOhxnULV4vrz_eOzkUg
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                account:
                  type: string
                password:
                  type: string
            examples: {}
        description: ''
      parameters: []
    parameters: []
  '/api/students/{studentId}':
    parameters:
      - type: string
        name: studentId
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get student by id
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./student.v1.yaml
      operationId: get-api-students-studentId
      security:
        - JWT Token: []
  /api/students/auth:
    get:
      summary: Authenticate a student
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginResponse'
      operationId: get-api-students-auth
      security:
        - JWT Token: []
components:
  schemas:
    loginResponse:
      title: loginResponse
      type: object
      properties:
        id:
          type: integer
        account:
          type: string
        token:
          type: string
        expiryTime:
          type: number
  securitySchemes:
    JWT Token:
      type: http
      scheme: bearer
      description: 'Put the token in the header `Authorization` with the value `Bearer ${token}`. 400 Unauthorized is responded when the token is invalid.'
